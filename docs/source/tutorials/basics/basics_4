# Defining chemical system

Following the previous example, we will now define a chemical system for the complete combustion of a stoichiometric CH$_4$-ideal air mixture. This system is represented by the global reaction

```{eval-rst}
.. math::
    :nowrap:

    \begin{equation}
        \text{CH}_4 + 2 (\text{O}_2 + 79/21 \text{N}_2) \rightleftharpoons \text{CO}_2 + 2 \text{H}_2\text{O} + 7.52 \text{N}_2.
    \end{equation}

```

The chemical system refer to the chemical species that may be involved in the problem. In this case, given the global reaction we have: CH$_4$, O$_2$, N$_2$, CO$_2$, and H$_2$O. We can define the chemical species in the following way:

```matlab
self.S.LS = {'CH4', 'N2', 'O2', 'CO2', 'H2O'};
```

That is all we need to define the chemical system. However, typical combustion problems involve a large number of chemical species, and sometimes we do not have prior knowledge of all the relevant species in the problem. In such cases, we can recall in a routine <tt>find_products.m</tt> introduced in [*Accessing the databases*](basics_2#accessing-the-databases). This routine allows us to identify all the possible products after a chemical transformation, given a set of chemical species (reactants). For this example, we can write at the prompt:

```matlab
self.S.LS = find_products(self, {'CH4', 'O2', 'N2'});
```

which will yield the following output:

```matlab

```

````{tip}

When we have prior knowledge of the chemical species involved in the problem, we can streamline the initialization of CT by directly specifying those species. Consequently, we only need to include these specific chemical species in our problem, writing at the prompt:
```matlab
self = App({'CH4', 'N2', 'O2', 'CO2', 'H2O'});
```

````