#Â Incident shock waves

Shock waves are ... . In this tutorial, we will cover how to solve the Rankine-Hugoniot equations for a planar incident shock wave, namely

```{eval-rst}
.. math::
    :nowrap:

    \begin{equation}
      p_2 = p_1 + \rho_1 u_1^2 \left( 1-\dfrac{\rho_1}{\rho_2}\right) \quad \new{\text{and}} \quad 
    h_2 = h_1 + \dfrac{u_1^2}{2}\left[1- \left(\dfrac{\rho_1}{\rho_2}\right)^2\right],
    \end{equation}
```
where $p$, $\rho$, $u$, and $h$ are the pressure, density, velocity, and specific enthalpy, respectively, and the subscripts 1 and 2 refer to the upstream and downstream states of the shock wave, respectively. This equation must be supplemented by the equation of state, which for an ideal gas reads

```{eval-rst}
.. math::
    :nowrap:

    p = \rho R T / W,
    \end{equation}
```
where $R$ is the universal gas constant, $T$ is the temperature, and $W$ is the molecular weight of the gas. In CT, the Rankine-Hugoniot equations are solved using the {mat:func}`~src.+combustiontoolbox.+shockdetonation.@ShockSolver` class, which is part of the `+combustiontoolbox.+shockdetonation` module. The following code snippet demonstrates how to solve the Rankine-Hugoniot equations for a planar incident shock wave in air at $T_1 = 300$ K, $p_1 = 1$ atm, and $M_1 \in [1, 10]$:

```matlab
% Import packages
import combustiontoolbox.databases.NasaDatabase
import combustiontoolbox.core.*
import combustiontoolbox.shockdetonation.ShockSolver
% Get NASA's database
DB = NasaDatabase();
% Define chemical system
system = ChemicalSystem(DB);
% Initialize mixture
mix = Mixture(system);
% Define chemical state
set(mix, {'N2', 'O2'}, [79/21, 1]);
% Define properties
mixArray1 = setProperties(mix, 'temperature', 300, 'pressure', 1 * 1.01325, 'Mach', 1:0.1:10);
% Initialize shock solver
solver = ShockSolver();
% Perform shock calculations
[mixArray1, mixArray2] = solveArray(solver, mixArray1);
% Generate report
report(solver, mixArray1, mixArray2);
```